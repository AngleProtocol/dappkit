import { readdir, appendFile } from "node:fs/promises";

const entrypoint = "./src/components";
const paths = await readdir(entrypoint, { recursive: true });

const files = paths.filter((p) => /\.tsx$/.test(p))
const components = files.map(path => ({path, component: path.match(/\/([^/]+\.tsx)$/)?.[1]?.replace(/\.[^.]+$/, '')}));

const exports = components.reduce((indexFile, {path, component}) => {
    const filePath = `"./components/${path}"`;
    const declaration = `export * from ${filePath}`;
    const defaultDeclaration = `export {default as ${component}} from ${filePath}`;

    return `${indexFile}\n${declaration}\n${defaultDeclaration}`
}, "// /!\\ Generated by scripts/generateExports.ts, do not edit directly\n")

await Bun.write("./src/components.ts", exports);