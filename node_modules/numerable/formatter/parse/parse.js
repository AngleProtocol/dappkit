'use strict';

var isNil = require('../../core/utils/is-nil.js');
var isFunction = require('../../core/utils/is-function.js');
var isNanNumber = require('../../core/utils/is-nan-number.js');
var formattedStringToNumber = require('./utils/formatted-string-to-number.js');
var resolveFormatOptions = require('../utils/resolve-format-options.js');

const getUnformatFunctionIfMatch = (input, resolvedOptions) => {
    for (const formatter of resolvedOptions.formatters) {
        const matcher = formatter.regexps.unformat;
        if (!matcher)
            continue;
        const matcherResult = isFunction(matcher) ? matcher(input, resolvedOptions) : !!input.match(matcher);
        if (matcherResult)
            return formatter.unformat;
    }
};
const parse = (input, options) => {
    const resolvedOptions = resolveFormatOptions(options);
    let value;
    if (isNil(input) || isNanNumber(input)) {
        value = null;
    }
    else if (typeof input === 'number') {
        // Handles negative zero
        value = input === 0 ? 0 : input;
    }
    else if (typeof input === 'string') {
        if (resolvedOptions.zeroFormat && input === resolvedOptions.zeroFormat) {
            value = 0;
        }
        else if (resolvedOptions.nullFormat && input === resolvedOptions.nullFormat) {
            value = null;
        }
        else {
            // Removes non-breaking spaces if they exists
            const inputStringWithNormalSpaces = input.replace(/\u00A0/, ' ');
            const unformatFunctionFromFormatters = getUnformatFunctionIfMatch(inputStringWithNormalSpaces, resolvedOptions);
            const unformatFunction = unformatFunctionFromFormatters || formattedStringToNumber;
            value = unformatFunction(inputStringWithNormalSpaces, resolvedOptions);
        }
    }
    else {
        const result = +input;
        value = result === 0 ? result : (result || null);
    }
    return value;
};

module.exports = parse;
