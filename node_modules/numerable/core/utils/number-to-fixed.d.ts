/**
 * Implementation of Number.prototype.toFixed() that treats floats more like decimals
 *
 * Fixes binary rounding issues (eg. (0.615).toFixed(2) === '0.61') that present
 * problems for accounting- and finance-related software.
 *
 * <!> This function should only receive a finite number, never NaN, Infinity or -Infinity
 * <i> This function should return always a JS string representation of a number, but without exponent.
 * <i> optionalFractionDigits means: from the fractionDigits amount, the ones that are optional.
 */
declare const numberToFixed: (finiteNumber: number, fractionDigits: number, roundingFunction: (num: number) => number, optionalFractionDigits?: number | undefined) => string;
export default numberToFixed;
